F{% extends "base.hbs" %}
{% block title %} | Produkce, uvod{% end %}
{% block body %}

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>

<link href="/static/select2/dist/css/select2.css" rel="stylesheet">
<script type="text/javascript" src="/static/select2/dist/js/select2.js"></script>

<link href="/static/tabulator/dist/css/bootstrap/tabulator_bootstrap4.css" rel="stylesheet">
<script type="text/javascript" src="/static/tabulator/dist/js/tabulator.js"></script>

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Roboto+Mono" rel="stylesheet"> 


<style type="text/css">
	.th-input{
		border: 1px solid lightgray;
		width: 100%;
		min-width: 5em;
		max-width: 10em;
	}

	.select2-style{
		height: initial;
		line-height: initial;
		padding: 0pt;
		border-radius: 0px;
	}

	table td {padding: 1pt;}
	.table-sm td {padding: 2pt; font-size: small;}
	table {table-layout: fixed;}

	.bg-danger{
		background-color: #f48484 !important;
	}

	.bg-warning{
		background-color: #fdf8b2 !important;
	}


	.popover { 
	  max-width : 400px;
	  z-index   : 1060;
	}


	.bom_table_key {
		display: table-cell;
  		font-weight: bold;
  		padding-right: 1em;
	}

	.bom_table_value {
		display: table-cell;
		word-break: break-all;
	}


	.popup_label {
		font-weight: bold;
		padding-right: 1em;
		white-space: nowrap;
	}

	.table-row {
		display: table-row;
	}

	.table-cell {
		display: table-cell;
	}

	.table-cell-key {
		display: table-cell;
		font-weight: bold;
		padding-right: 1em;
	}

</style>

<nav style="margin: 0.5rem;" style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="./../../..">Home</a></li>
    <li class="breadcrumb-item"><a href="./../..">Production</a></li>
    <li class="breadcrumb-item active" aria-current="page">Editace položky</li>
  </ol>
</nav>

<div class="container-fluid">


	<div class="row d-flex align-items-stretch">
		<div class="col-lg-4 col-sm-6 col-xs-12">
			<div class="card">
				<div class="card-body" style="display: table;">
					<div class="table-row">
						<label class="table-cell-key"> Název: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_name'><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Autor: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_autor' readonly><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Vytvořeno: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_created' readonly><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Popis: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_description'><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Type: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_type' readonly><br>
					</div>

					<div class="table-row">
						<span class="table-cell-key"></span>
						<input class="form-control" type="button" id="production_info_send" value="Uložit parametry" onclick="update_parameters()">
					</div>
					<!-- <a href="/production/{{id}}/print/" class="btn btn-sm btn-primary" target="_blank">Print</a>
					<input type="button" id="production_update_prices" value="Zaktualizovat skladove zasoby" class="btn btn-sm btn-primary" onclick="update_prices()" disabled>
					<input type="number" id="production_multiplication" value="1" class="btn btn-sm btn-primary" onchange="table.setData('./?operation=get_components_grouped', {operation:'get_components_grouped'}, 'POST');"> -->
				</div>
			</div>
		</div>


		<div class="col-lg-4 col-sm-6 col-xs-12 card" style="padding: 0pt;">
		  <ul class="list-group list-group-flush">
		    <a class="list-group-item" href="#" onclick="openUploadModal()"><i class="bi bi-cloud-upload"></i> Nahrát data (BOM)</a>
		    <a class="list-group-item" href="./../print/" target="_blank"><i class="bi bi-printer"></i> Tisknout soupis položek</a>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-display"></i> Zobrazit gerber</a>
		    <span class="list-group-item d-flex w-100 justify-content-between">
		    	<span><i class="bi bi-question-square"></i> Plánovaný počet kusů</span>
		    	<span><input type="number" id="production_multiplication" value="1" min="1" step="1" style="border: none; border-bottom: solid lightgray 1px;width: 3em;text-align: right; padding: 0pt; margin: 0pt;" onchange="count_validation($(this).val())"></span>
		    	<span>
					<button class="btn btn-sm btn-outline-primary" id="reservation_btn_do" onclick="doReservation()" style="display: none;"><i class="bi bi-bookmark-plus"></i> Vytvořit rezervace </button>
					<button class="btn btn-sm btn-outline-danger" id="reservation_btn_earse" onclick="earseReservation()" style="display: none;"><i class="bi bi-bookmark-plus"></i> Smazat rezervace </button>
					<button class="btn btn-sm btn-outline-success" id="reservation_btn_modal" onclick="openReservationModal()" style="display: none;">Zobrazit rezervace</button>
				</span>
		    </span>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-cpu-fill"></i> Spustit výrobu</a>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-card-checklist"></i> Zobrazit výrobu</a>
		  </ul>
		</div>



		<div class="col-lg-4 col-sm-6 col-xs-12">


 <ul class="list-group">
  <li class="list-group-item d-flex justify-content-between">Počet komponent: <span><span id="pricing_count">--</span> ks</span>
  <li class="list-group-item d-flex justify-content-between">Počet komponent s USTID / počet typů USTID: <span><span id="pricing_count_ust">--</span> ks / <span id="pricing_count_ust_unique">--</span> ks</span>
</li>
  <li class="list-group-item d-flex justify-content-between">Nákupní cena materiálu: <span><span id="pricing_price_components">--</span> czk</span></li>
  <li class="list-group-item d-flex justify-content-between">Cena spotřebního materiálu: <span ><input id="pricing_price_consumables" type="number" value="0" min="0" step="1" style="border: none; border-bottom: solid lightgray 1px;width: 4em;text-align: right; padding: 0pt; margin: 0pt;"> czk</span></li>
  <li class="list-group-item d-flex justify-content-between">Cena práce: <span><input id="pricing_price_work" type="number" value="0" min="0" step="1" style="border: none; border-bottom:  solid lightgray 1px;width: 4em;text-align: right; padding: 0pt; margin: 0pt;"> czk</span></li>
  <li class="list-group-item d-flex justify-content-between fw-bold">Skladová cena komponenty: <span><span id="pricing_price_stock">0</span> czk</span></li>
  <li class="list-group-item d-flex justify-content-between">Marže: <span><span>--</span> %</span></li>
  <li class="list-group-item d-flex justify-content-between fw-bold">Katalogová prodejní cena: <span><input id="pricing_price_sell" type="number" value="0" min="0" step="1" style="border: none; border-bottom: solid lightgray 1px;width: 6em;text-align: right; padding: 0pt; margin: 0pt;">czk</span></li>
  <li class="list-group-item d-flex justify-content-between">Poslední aktualizace ceny proveden: <span>--</span> <button class="btn btn-sm btn-outline-success" onclick="update_pricelist()">Update & save</button></li>
</ul> 
		</div>

		<div class="col-12">
			<div class="card">
				<div class="bom_loading_show" style="display: none">
					<h2>NACITAM BOM ....</h2>
				</div>
				<div class="bom_loading_hide" style="display: none;">
					<table class="table table-sw table-striped">
						<thead>
							<tr>
								<th class="col-2">#</th>
								<th class="col-5">Ref</th>
								<th class="col-10">BOM</th>
								<th class="col-10">Product</th>
								<th class="col-2">Count</th>
								<th class="col-6">Warehouse</th>
							</tr>
						</thead>
						<tbody class="bom_table_body">
						
						</tbody>
					</table>
				</div>
				<!-- <input type="button" class="component-table-add-row btn btn-primary" value="Add row"> -->
			</div>
		</div>

<!-- 		<div class="col-12">
			<div class="card">
					XML netlist:
					<input type="file" name="bom" id="ust_bom_file"/>
					<input type="submit" value="upload" id="ust_bom_btn" onclick="startUpload()" />
			</div>
		</div> -->
</div>



<div class="modal" id="modal_load_bom" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Importování BOMu (.xml netlist)</h5>
      </div>
      <div class="modal-body">
      	<div id="bom_import_step_select" class="bom_import_step">
  				<label for="formFile" class="form-label">Vyberte soubor:</label>

      		<div class="input-group mb-3">
  				<input class="form-control" type="file" id="ust_bom_file" name='bom'>
  				<input class="btn btn-outline-success" type="button" id="ust_bom_btn" name='' onclick="startUpload()" value="Nahrát">
			</div>
			<div class="form-check form-switch">
			  <label class="form-check-label" for="flexSwitchCheckDefault">Odstranit neaktuální položky</label>
			  <input class="form-check-input" type="checkbox" id="ust_bom_remove_obsolete">
			</div>
		</div>
      	
      	<div id="bom_import_step_loading" class="bom_import_step">
      		<div class="spinner-border" role="status">
			  <span class="visually-hidden">Loading...</span>
			</div>
      	</div>
      	
      	<div id="bom_import_step_success" class="bom_import_step">
      		<div class="alert alert-success" role="alert">
			  Nahrání BOMu bylo úsěšné. Stránka bude automaticky obnovena. 
			</div>
      	</div>
      	<div id="bom_import_step_failed" class="bom_import_step">
      		<div class="alert alert-danger" role="alert">
			  Nahrání se nezdařilo... 
			</div>
      	</div>
      </div>
<!--       <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div> -->
    </div>
  </div>
</div>



<div class="modal" tabindex="-1" id="reservation_modal">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Správa rezervací</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
      	<div id="reservation_modal_table"></div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zavrit</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>



<!-- NOVÉ POCITANI SOUCASTEK -->
<script type="text/javascript">
	
	function update_bom(){
		$(".bom_loading_show").show();
		$(".bom_loading_hide").hide();
		$(".bom_table_body").empty();


		$.ajax({
	        type: "GET",
	        url: "../get_bom_table/",
	        data: {
	        	name: $('#production_name').val(),
	        },
	   		//async: false,
	        success: function( data, textStatus, jQxhr ){
				$(".bom_loading_show").hide();
				$(".bom_loading_hide").show();

				$(".bom_table_body").html(data);
				count_validation()
	    		
	    	},
	        error: function( jqXhr, textStatus, errorThrown ){
	            console.log( errorThrown );
	            Lobibox.notify('error', {
	                msg: 'CHYBA!!!!: ' + errorThrown,
	                icon: false,
	            });
	        }
	    });
	} // Konec update_bom()

	function update_multiplication(multiplication = 1){
		$(".count_multiplication").each(function(){
		    $(this).text(Number($(this).attr("unit_value"))*multiplication);
		  });
	}


	function count_validation(multiplication = 1){
		update_multiplication(multiplication);
		$(".count_validation").each(function(){
			var table_row = $(this).closest('td');
			console.log($(this));	
			table_row.removeClass("bg-danger");
			table_row.removeClass("bg-warning");
			table_row.removeClass("bg-secondary");

			if(Number($(this).attr("unit_required"))*multiplication > Number($(this).attr("unit_available"))) {
				table_row.addClass("bg-danger");
			} else if (Number($(this).attr("unit_required"))*(multiplication+1) > Number($(this).attr("unit_available"))) {
				table_row.addClass("bg-warning");
			}
		});
	}

update_bom();



</script>
<!-- KONEC _ NOVE POCITANI SOUCASTEK -->





<style type="text/css">
	
	.popover-class{
	}

	.popover-body{
		padding: 7pt 7pt;
	}

	:root {
	  --popover-max-width: 500px;
	}

</style>

<script type="text/javascript">
	

var popover = null;


$(document).on("mouseenter", ".hover-packet", function(e) {
	
	try {
		popover.dispose();
	}catch(e){};

	popover = new bootstrap.Popover(e.currentTarget, {
		placement: 'auto',
		sanitize: false,
		html: true,
		content: "Loading ...",
		customClass: "popover-class",
		container: 'body'
	});
	popover.show();

	$.ajax({
        type: "GET",
        url: "/store/popover/packet/"+e.currentTarget.getAttribute("packet_id")+"/",
        data: {
        	name: $('#production_name').val(),
        },
   		//async: false,
        success: function( data, textStatus, jQxhr ){
			
			popover._config.content = data;
			popover.setContent();
			popover.show();
    		
    	},
        error: function( jqXhr, textStatus, errorThrown ){

			popover._config.content = "Nelze nacist";
			popover.setContent();
			popover.show();

            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });

});

$(document).on("mouseenter", ".hover-item", function(e) {	
	try {
		popover.dispose();
	}catch(e){};

	popover = new bootstrap.Popover(e.currentTarget, {
		placement: 'auto',
		sanitize: false,
		html: true,
		content: "Loading ...",
		customClass: "popover-class",
		container: 'body'
	});
	popover.show();

	$.ajax({
        type: "GET",
        url: "/store/popover/item/"+e.currentTarget.getAttribute("item_id")+"/",
        data: {
        	name: $('#production_name').val(),
        },
        success: function( data, textStatus, jQxhr ){
			
			popover._config.content = data;
			popover.setContent();
			popover.show();
    		
    	},
        error: function( jqXhr, textStatus, errorThrown ){

			popover._config.content = "Nelze nacist";
			popover.setContent();
			popover.show();

            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });

});

$(document).on("mouseleave", "popover-body", function(e) {
	console.log("Odjet pryc...")
	//popover.dispose();
	//popover = null;
	//alert("mouseleave")
    $(this).css("background-image","url('ie/imgs/btn/btn.png')");
    $(this).find("a").css("background-image","url('ie/imgs/btn/btn-left.png')");
});

</script>





<script type="text/javascript">


var ust_id_autocomplete = function(cell, onRendered, success, cancel){
    //cell - the cell component for the editable cell
    //onRendered - function to call when the editor has been rendered
    //success - function to call to pass the succesfully updated value to Tabulator
    //cancel - function to call to abort the edit and return to a normal cell

    //create and style input

	var input = document.createElement("select");
    input.setAttribute("class", "th-input");
    input.setAttribute("id", "row_ustid");

    //create and style input
    input.style.padding = "3px";
    input.style.width = "100%";
    input.style.boxSizing = "border-box";

    onRendered(function(){
    	console.log('RENDER')
        var select_input = $(input);

        select_input.select2({
		  	//dropdownCssClass: "select2-style",
		  	width: '100%',
		    ajax: {
		    	delay: 250,
			    url: '/store/api/search/',
			    type: "POST",
			    dataType: 'json',
			    data: function (params) {
			      var query = {
			        q: params.term,
			        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
			        page: 0
			      }
			      return query;
			    },
			    processResults: function (data) {
			    	data.unshift(Object({name: 'Odebrat výběr', value: -1, _id: {'$oid': "null"}}))
			        return {
			            results: $.map(data, function (item, i) {
                            //console.log(item, i);
			                return {
			                    text: item['name']+" ("+item['_id']['$oid']+")",
			                    id: item['_id']['$oid']
			                }
			            })
			        };
			    }
		    },
            allowClear: true,
    	});

        select_input.select2("open");
    });

    function onChange(e = null){
        var select_data = $(input).val();
        if(select_data !== null && select_data != cell.getValue()){
            console.log("Hodnota pole se zmenila", select_data);
            success(select_data);
        }else{
            console.log("Hodnota pole je stejna")
            cancel();
        }
    }

    $(input).on("change", onChange);
    $(input).on("select2:close", onChange);

    console.log(input);
    return input;
};

	// tlacitko, ktere prida prazdny radek na konec tabulky
	$(".component-table-add-row").click(function(){
    	$("#component-table").tabulator("addRow", {});
	});


	var table_component_price = function(values, data, calcParams){
	    console.log(values);
	    console.log(data);
	    console.log(calcParams);

	    var calc = 0;
	    for(var i in data){
	    	var row = data[i];
	    	console.log(">>", row);
	    	calc = row['calc']*row['price_predicted']
	    }
    	return calc;
	}


	function editf(e, cell){
		console.log(cell.cell);
		cell.edit(true);
	}

	function supplier_url(cell, formatterParams){ //plain text value
		var value = cell.getValue();
		console.log("VALUE", value);
		var row = "";
		for(x in value){
			if(x>0){row+=' ';}
			if(value[x].full_url == undefined){
				row += "<a>"+ value[x].supplier + "</a>";
			}else{
				row += "<a href = '"+ value[x].full_url +"' target='_blank'>"+ value[x].supplier + "</a>";
			}
		}
    	return row;
	};


	function multiplication(cell, formatterParams){
		var value = cell.getValue();
    	return value*$("#production_multiplication").val();
	};


// Konec tabulky pro seznam polozek


function openUploadModal(){
	$('.bom_import_step').hide();
	$('#bom_import_step_select').show();
	$('#modal_load_bom').modal('show');
}

function startUpload() {
    var fileInput = document.getElementById("ust_bom_file");

    var fd = new FormData();
	fd.append('remove_obsolete', Number($("#ust_bom_remove_obsolete").is(':checked')) );
	fd.append('remove_edited', 0 );
	fd.append('file', fileInput.files[0]);

    if (fileInput.files.length == 0) {
        alert("Please choose a file");
        return;
    }

    var xhr = new XMLHttpRequest();
	xhr.withCredentials = true;

	xhr.onloadstart = function(){
		$('.bom_import_step').hide();
		$('#bom_import_step_loading').show();
	};

    xhr.onload = function() {

    	if (this.status == 200) {
			$('.bom_import_step').hide();
			$('#bom_import_step_success').show();
			console.log("Úspěch - nahráno");
			setTimeout(function(){window.location.reload(1);}, 2000);
		} else {
			$('.bom_import_step').hide();
			$('#bom_import_step_failed').show();		
		}
    };

    xhr.onerror = function() {
        alert("Error! Upload failed. Can not connect to server.");
		$('.bom_import_step').hide();
		$('#bom_import_step_failed').show();
    };

    xhr.open("POST", "/production/{{id}}/upload/bom/ust/", true);
    xhr.send(fd);
}




function load_components() {

	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'get_production'
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		console.log("zacatek");
            console.log(data);
            production = data;
            components = data['components'];
            placement = data['placement'];
            console.log(components);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });

	$('#production_name').val(production['name']);
	$('#production_autor').val(production['author']);
	$('#production_created').val(Date(production['created']['$date']));
	$('#production_type').val(production['type']);
	$('#production_description').val(production['description']);

	$("#production_multiplication").val(1);
	if(production.multiplication){
		$("#production_multiplication").val(production['multiplication']);
		count_validation(production['multiplication']);
	}

	if(production['state'] == 0){
		$("#reservation_btn_do").show();
		$("#reservation_btn_earse").hide();
		$("#reservation_btn_modal").hide();
	}else if(production['state'] == 1){
		$("#reservation_btn_do").hide();
		$("#reservation_btn_earse").show();
		$("#reservation_btn_modal").show();
		$("#production_multiplication").attr('disabled', 1);
	}else if(production['state'] == 2){
		// TODO .. sem se zatim neumim dostat... 
	}

	if(production.pricing){
		draw_pricing(production.pricing);
	}

 }

load_components();

function draw_pricing(prices){
	$("#pricing_count").text(prices.count);
	$("#pricing_count_ust").text(prices.count_ust);
	$("#pricing_count_ust_unique").text(prices.count_ust_unique);
	$("#pricing_price_components").text(Math.round(prices.price_components));
	$("#pricing_price_stock").text(Math.round(prices.price_stock));

	$("#pricing_price_sell").val(Math.round(prices.price_sell));
	$("#pricing_price_consumables").val(prices.price_consumables);
	$("#pricing_price_work").val(prices.price_work);

}



// aktualizuje parametry, ktere jsou pouzite v tabulce s nastavenim
function update_parameters(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_parameters',
        	name: $('#production_name').val(),
        	description: $('#production_description').val(),
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function update_pricelist(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_pricelist',
        	name: $('#production_name').val(),
        	price_consumables: $("#pricing_price_consumables").val(),
        	price_work: $("#pricing_price_work").val(),
        	price_stock: $("#pricing_price_stock").val()
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function doReservation(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'do_reservation',
        	name: $('#production_name').val(),
        	count: $('#production_multiplication').val(),
        },
        success: function( data, textStatus, jQxhr ){
        	load_components();
            Lobibox.notify('success', {
                msg: 'Rezervace vytvorena pro '+$('#production_multiplication').val()+' ks',
                icon: false,
            });
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function earseReservation(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'earse_reservation',
        	name: $('#production_name').val(),
        },
        success: function( data, textStatus, jQxhr ){
        	load_components();
            Lobibox.notify('success', {
                msg: 'Rezervace smazána',
                icon: false,
            });
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}


function openReservationModal(){
	$.ajax({
        type: "GET",
        url: "./../get_reservation/",
        success: function( data, textStatus, jQxhr ){
            $("#reservation_modal_table").html(data);
    	},
        error: function( jqXhr, textStatus, errorThrown ){
        }
    });
	$("#reservation_modal").modal('show');
}

function update_component_parameter(component, param, value){
	console.log("Uprava parametru:", $('#production_name').val(), component, param, value);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_component_parameters',
        	name: $('#production_name').val(),
        	component: component,
        	parameter: param,
        	value: value
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		//load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// funkce slouzi pro prenacteni vsech cen v modulu
function update_prices(){
	$.ajax({
		type: 'POST',
		url: '.',
		data:{
			operation: 'update_prices'
		},
		async: false,
		success: function(data, status, jQxhr){
            console.log('success', status, data);
		},
		error: function(jQxhr, status, error){
			console.log('error', status, error);
		}
	});
}



// Ref,Val,Package,PosX,PosY,Rot,Side
function update_placement(Ref,Val,Package,PosX,PosY,Rot,Side){
	console.log("update_placement", Ref,Val,Package,PosX,PosY,Rot,Side);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_placement',
        	Ref: Ref,
        	Val: Val,
        	Package: Package,
        	PosX: PosX,
        	PosY: PosY,
        	Rot: Rot,
        	Side:Side
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		comp = data;
            //console.log(comp);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// pri zmene souboru v #file_placement se vezme soubor, rozparseruje a po soucastkach se odesila na server
$('#file_placement').change(load_placement);
function load_placement(){

	var reader = new FileReader();
	reader.onload = function(progressEvent){
		console.log(this.result);

		var lines = this.result.split('\n');
		for(var i = 1; i < lines.length; i++){
		  console.log(lines[i]);
		  data = Papa.parse(lines[i], {
		  		delimiter: ',',
		  	}).data[0];
		  //console.log(data);
		  update_placement(data[0], data[1], data[2], data[3], data[4], data[5], data[6]);
		}

		load_components();
	};
	reader.readAsText( $('#file_placement')[0].files[0]);
}



</script>

{% end %}
