F{% extends "base.hbs" %}
{% block title %} | Produkce, uvod{% end %}
{% block body %}

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>

<link href="/static/select2/dist/css/select2.css" rel="stylesheet">
<script type="text/javascript" src="/static/select2/dist/js/select2.js"></script>

<link href="/static/tabulator/dist/css/bootstrap/tabulator_bootstrap4.css" rel="stylesheet">
<script type="text/javascript" src="/static/tabulator/dist/js/tabulator.js"></script>

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Roboto+Mono" rel="stylesheet"> 


<style type="text/css">
	.th-input{
		border: 1px solid lightgray;
		width: 100%;
		min-width: 5em;
		max-width: 10em;
	}

	.select2-style{
		height: initial;
		line-height: initial;
		padding: 0pt;
		border-radius: 0px;
	}

	table td {padding: 1pt;}
	.table-sm td {padding: 2pt; font-size: small;}
	table {table-layout: fixed;}

	.bg-danger{
		background-color: #f48484 !important;
	}

	.bg-warning{
		background-color: #fdf8b2 !important;
	}


	.popover { 
	  max-width : 400px;
	  z-index   : 1060;
	}


	.bom_table_key {
		display: table-cell;
  		font-weight: bold;
  		padding-right: 1em;
	}

	.bom_table_value {
		display: table-cell;
		word-break: break-all;
	}


	.popup_label {
		font-weight: bold;
		padding-right: 1em;
		white-space: nowrap;
	}

	.table-row {
		display: table-row;
	}

	.table-cell {
		display: table-cell;
	}

	.table-cell-key {
		display: table-cell;
		font-weight: bold;
		padding-right: 1em;
	}

</style>

<nav style="margin: 0.5rem;" style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="./../../..">Home</a></li>
    <li class="breadcrumb-item"><a href="./../..">Production</a></li>
    <li class="breadcrumb-item active" aria-current="page">Editace položky</li>
  </ol>
</nav>

<div class="container-fluid">


	<div class="row d-flex align-items-stretch">
		<div class="col-4">
			<div class="card">
				<div class="card-body" style="display: table;">
					<div class="table-row">
						<label class="table-cell-key"> Název: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_name'><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Autor: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_autor' readonly><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Vytvořeno: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_created' readonly><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Popis: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_description'><br>
					</div>
					<div class="table-row">
						<label class="table-cell-key"> Type: </label>
						<input class="table-cell form-control form-control-sm" style="margin-top: 2pt; margin-bottom: 2pt;" type="text" id='production_type' readonly><br>
					</div>

					<div class="table-row">
						<span class="table-cell-key"></span>
						<input class="form-control" type="button" id="production_info_send" value="Uložit parametry" onclick="update_parameters()">
					</div>
					<!-- <a href="/production/{{id}}/print/" class="btn btn-sm btn-primary" target="_blank">Print</a>
					<input type="button" id="production_update_prices" value="Zaktualizovat skladove zasoby" class="btn btn-sm btn-primary" onclick="update_prices()" disabled>
					<input type="number" id="production_multiplication" value="1" class="btn btn-sm btn-primary" onchange="table.setData('./?operation=get_components_grouped', {operation:'get_components_grouped'}, 'POST');"> -->
				</div>
			</div>
		</div>


		<div class="col-4 card" style="padding: 0pt;">
		  <ul class="list-group list-group-flush">
		    <a class="list-group-item" href="#" onclick="$('#modal_load_bom').modal('show')"><i class="bi bi-cloud-upload"></i> Nahrát data (BOM)</a>
		    <a class="list-group-item" href="./../print/" ><i class="bi bi-printer"></i> Tisknout osazovák</a>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-display"></i> Zobrazit gerber</a>
		    <a class="list-group-item" href="#"><i class="bi bi-question-square"></i> Nastavit počet kusů <input type="number" id="production_multiplication" value="1" min="1" step="1" style="border: solid gray 1px;width: 5em;text-align: center;padding: 0pt;margin-left: 2em;" onchange="count_validation($(this).val())"></a>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-cpu-fill"></i> Spustit výrobu</a>
		    <a class="list-group-item text-muted" href="#" ><i class="bi bi-card-checklist"></i> Zobrazit výrobu</a>
		  </ul>
		</div>



		<div class="col-4">
			<div class="card">
				<div class="card-body">


					Cenotvorba - cena matiriálu, cena práce, počet komponent, ....


				</div>
			</div>
		</div>





		<div class="col-12">
			<div class="card">
				<div class="bom_loading_show" style="display: none">
					<h2>NACITAM BOM ....</h2>
				</div>
				<div class="bom_loading_hide" style="display: none;">
					<table class="table table-sw table-striped">
						<thead>
							<tr>
								<th class="col-2">#</th>
								<th class="col-5">Ref</th>
								<th class="col-10">BOM</th>
								<th class="col-10">Product</th>
								<th class="col-2">Count</th>
								<th class="col-6">Warehouse</th>
							</tr>
						</thead>
						<tbody class="bom_table_body">
						
						</tbody>
					</table>
				</div>
				<!-- <input type="button" class="component-table-add-row btn btn-primary" value="Add row"> -->
			</div>
		</div>

<!-- 		<div class="col-12">
			<div class="card">
					XML netlist:
					<input type="file" name="bom" id="ust_bom_file"/>
					<input type="submit" value="upload" id="ust_bom_btn" onclick="startUpload()" />
			</div>
		</div> -->
</div>



<div class="modal" id="modal_load_bom" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Importování BOMu (.xml netlist)</h5>
      </div>
      <div class="modal-body">
      	<div id="bom_import_step_1">
  				<label for="formFile" class="form-label">Vyberte soubor:</label>

      		<div class="input-group mb-3">
  				<input class="form-control" type="file" id="ust_bom_file" name='bom'>
  				<input class="btn btn-outline-success" type="button" id="ust_bom_btn" name='' onclick="startUpload()" value="Nahrát">
			</div>
			<div class="form-check form-switch">
			  <label class="form-check-label" for="flexSwitchCheckDefault">Odstranit neaktuální položky</label>
			  <input class="form-check-input" type="checkbox" id="ust_bom_remove_obsolete">
			</div>
		</div>
      	
      	<div id="bom_import_step_2" style="display: none">
      		Loading
      	</div>
      	
      	<div id="bom_import_step_3" style="display: none">
      		Loading
      	</div>
      </div>
<!--       <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div> -->
    </div>
  </div>
</div>


<!-- NOVÉ POCITANI SOUCASTEK -->
<script type="text/javascript">
	
	function update_bom(){
		$(".bom_loading_show").show();
		$(".bom_loading_hide").hide();
		$(".bom_table_body").empty();


		$.ajax({
	        type: "GET",
	        url: "../get_bom_table/",
	        data: {
	        	name: $('#production_name').val(),
	        },
	   		//async: false,
	        success: function( data, textStatus, jQxhr ){
				$(".bom_loading_show").hide();
				$(".bom_loading_hide").show();

				$(".bom_table_body").html(data);
				count_validation()
	    		
	    	},
	        error: function( jqXhr, textStatus, errorThrown ){
	            console.log( errorThrown );
	            Lobibox.notify('error', {
	                msg: 'CHYBA!!!!: ' + errorThrown,
	                icon: false,
	            });
	        }
	    });
	} // Konec update_bom()

	function update_multiplication(multiplication = 1){
		$(".count_multiplication").each(function(){
		    $(this).text(Number($(this).attr("unit_value"))*multiplication);
		  });
	}


	function count_validation(multiplication = 1){
		update_multiplication(multiplication);
		$(".count_validation").each(function(){
			var table_row = $(this).closest('td');
			table_row.removeClass("bg-danger");
			table_row.removeClass("bg-warning");

			if(Number($(this).attr("unit_required"))*multiplication > Number($(this).attr("unit_available"))) {
				table_row.addClass("bg-danger");
			} else if (Number($(this).attr("unit_required"))*(multiplication+1) > Number($(this).attr("unit_available"))) {
				table_row.addClass("bg-warning");
			}
			
		});
	}

update_bom();



</script>
<!-- KONEC _ NOVE POCITANI SOUCASTEK -->





<style type="text/css">
	
	.popover-class{

		background: red;
	}

	:root {
	  --popover-max-width: 500px;
	}

</style>

<script type="text/javascript">
	

var popover = null;


$(document).on("mouseenter", ".hover-packet", function(e) {
	console.log(e.target);
	
	try {
		popover.dispose();
	}catch(e){};

	popover = new bootstrap.Popover(e.target, {
		placement: 'auto',
		sanitize: false,
		html: true,
		content: "Loading ...",
		customClass: "popover-class",
		container: 'body'
	});
	popover.show();

	$.ajax({
        type: "GET",
        url: "/store/popover/packet/"+e.target.getAttribute("packet_id")+"/",
        data: {
        	name: $('#production_name').val(),
        },
   		//async: false,
        success: function( data, textStatus, jQxhr ){
			
			popover.config.content = data;
			popover.show();
    		
    	},
        error: function( jqXhr, textStatus, errorThrown ){

			popover.config.content = "Nelze nacist";
			popover.show();

            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });

});

$(document).on("mouseleave", ".hover-packet", function(e) {
	//popover.dispose();
	//popover = null;
	//alert("mouseleave")
    $(this).css("background-image","url('ie/imgs/btn/btn.png')");
    $(this).find("a").css("background-image","url('ie/imgs/btn/btn-left.png')");
});




</script>








<script type="text/javascript">




    //
    // initUtils();
    // initRender();
    // initStorage();
    // initDefaults();
    // cleanGutters();
    // populateMetadata();
    // dbgdiv = document.getElementById("dbg");
    // bom = document.getElementById("bombody");
    // bomhead = document.getElementById("bomhead");
    // filter = "";
    // reflookup = "";
    // initDone = true;
    // console.log("changeBomLayout");
    // // Triggers render
    // changeBomLayout('left-right');
	// //$("#component-table").tabulator();


	//create autocomplete editor

var ust_id_autocomplete = function(cell, onRendered, success, cancel){
    //cell - the cell component for the editable cell
    //onRendered - function to call when the editor has been rendered
    //success - function to call to pass the succesfully updated value to Tabulator
    //cancel - function to call to abort the edit and return to a normal cell

    //create and style input

	var input = document.createElement("select");
    input.setAttribute("class", "th-input");
    input.setAttribute("id", "row_ustid");

    //create and style input
    input.style.padding = "3px";
    input.style.width = "100%";
    input.style.boxSizing = "border-box";

    onRendered(function(){
    	console.log('RENDER')
        var select_input = $(input);

        select_input.select2({
		  	//dropdownCssClass: "select2-style",
		  	width: '100%',
		    ajax: {
		    	delay: 250,
			    url: '/store/api/search/',
			    type: "POST",
			    dataType: 'json',
			    data: function (params) {
			      var query = {
			        q: params.term,
			        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
			        page: 0
			      }
			      return query;
			    },
			    processResults: function (data) {
			    	data.unshift(Object({name: 'Odebrat výběr', value: -1, _id: {'$oid': "null"}}))
			        return {
			            results: $.map(data, function (item, i) {
                            //console.log(item, i);
			                return {
			                    text: item['name']+" ("+item['_id']['$oid']+")",
			                    id: item['_id']['$oid']
			                }
			            })
			        };
			    }
		    },
            allowClear: true,
    	});

        select_input.select2("open");
    });

    function onChange(e = null){
        var select_data = $(input).val();
        if(select_data !== null && select_data != cell.getValue()){
            console.log("Hodnota pole se zmenila", select_data);
            success(select_data);
        }else{
            console.log("Hodnota pole je stejna")
            cancel();
        }
    }

    $(input).on("change", onChange);
    $(input).on("select2:close", onChange);

    console.log(input);
    return input;
};

	// tlacitko, ktere prida prazdny radek na konec tabulky
	$(".component-table-add-row").click(function(){
    	$("#component-table").tabulator("addRow", {});
	});


	var table_component_price = function(values, data, calcParams){
	    console.log(values);
	    console.log(data);
	    console.log(calcParams);

	    var calc = 0;
	    for(var i in data){
	    	var row = data[i];
	    	console.log(">>", row);
	    	calc = row['calc']*row['price_predicted']
	    }
    	return calc;
	}


	function editf(e, cell){
		console.log(cell.cell);
		cell.edit(true);
	}

	function supplier_url(cell, formatterParams){ //plain text value
		var value = cell.getValue();
		console.log("VALUE", value);
		var row = "";
		for(x in value){
			if(x>0){row+=' ';}
			if(value[x].full_url == undefined){
				row += "<a>"+ value[x].supplier + "</a>";
			}else{
				row += "<a href = '"+ value[x].full_url +"' target='_blank'>"+ value[x].supplier + "</a>";
			}
		}
    	return row;
	};


	function multiplication(cell, formatterParams){
		var value = cell.getValue();
    	return value*$("#production_multiplication").val();
	};

// 	var table = new Tabulator("#component-table",{
// 	    layout:"fitColumns",
// 	    columns:[
// 	        {title:"#", field:"row", sorter:"number", width:25, editor:"input", editable:false},
// 	        {title:"počet", field: "count", sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
// 	        {title:"Pro výrobu", field: "count_multiply", formatter: multiplication, sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
// //	        {title:"Sklad",
// //	        	columns:[
// //	        		{title: "Celkem", field:"stock_count", editable: false, width: 80, topCalc:"sum"},
// //	        	]
// //	    	},
// //            {title:"Cena",
// //	        	columns:[
// //	        		{title: "pol", field:"price_item", editable: false, width: 80},
// //    	        	{title: "cel", field:"price_row", editable: false, width: 80, topCalc:"sum"},
// //	        	]
// //	    	},
//             {title:"Link", field:"link", formatter:"link", formatterParams: {labelField:"link", urlPrefix:"/store/component/", target:"_blank"}, width: 50},
// 	        {title:"Značka", field:"Ref", editor:"input", editable:true, cellDblClick:editf, sorter:"string"},
// 	        {title:"Položka", field:"Value", editor:"input", editable:true, cellDblClick:editf},
// 	        {title:"MFPN", field:"MFPN", editor:"input", editable:true, cellDblClick:editf},
// 	        //{title:"Distributor", field:"Distributor", editor:"input", editable:true, cellDblClick:editf},
// 	        {title:"Odkaz", field:"Datasheet", editor:"input", formatter:"link", editable:true, cellDblClick:editf},
// 	        {title:"Pouzdro", field:"Footprint", editor:"input", cellClick:function(e, cell){}, cellDblClick:editf},
// 	        {title:"UST id", field:"UST_ID", editor: ust_id_autocomplete},
// 	        //{title:"Cena",
// 	        //    columns:[
// 		//	        {title:"Sklad", field:"price_store", editable:false, topCalc:"avg", width: 95},
// 		//	        {title:"Použitá", field:"price", editor:"input", topCalc:"avg", editable:true, cellDblClick:editf, width: 95},
// 		//	        {title:"Cena", field:"price_group", topCalc: "sum", editable:false, width: 95},
// 		//		]
// 		//	},
// 	        {title:"Poznámka", field:"note", editor:"textarea", editable:true, cellDblClick:function(e, cell){ cell.edit(true);} },
// 	        {title:"Dodavatele", field:"supplier", editable:false, formatter: supplier_url},
// 	    ],
//     	addRowPos:"bottom",
// 	    cellEdited:function(cell){
//             if(cell._cell.value !== null){
//     	    	console.log("EDITED");
//             	//console.log(cell);
//         		//console.log(cell._cell.row.cells[7].value);
//         		update_component_parameter(cell._cell.row.cells[7].value, cell._cell.column.field, cell._cell.value);
//             }
//     	},
//         ajaxResponse:function(url, params, response){
//             console.log("AJAX RESPONSE");
//             console.log(url);
//             console.log(params);
//             console.log(response);
//             //url - the URL of the request
//             //params - the parameters passed with the request
//             //response - the JSON object returned in the body of the response.

//             response = $.map(response, function( val, i ) {
//               // Do something
//               console.log(val, i);

//               var usttext = undefined;
//               var price = null;
//  			  var supplier = [];


//                 if (val['stock'].length > 0){

//                   console.log("PRED SUPPLIER");
//                   supplier = val['stock'][0].supplier;

//                   usttext = val['stock'][0]['name'];
//                   console.log("StockName", val['stock'][0]['name']);

// 				  var history = val['stock'][0]['history'];

//                     console.log("Historie:", history);
//                     for(j in history){
//                         if(history[j]['operation'] == 'buy' || history[j]['operation'] == 'inventory'){
//                             console.log("Cena za nakup je",  history[j]['price']);
//                             price = history[j]['price'];
//                             break;
//                         }
//                       }
//                   //}
//                 }

//                 var uid = val["_id"]['UST_ID'];

//                 if(typeof uid == 'object'){
//                     uid = val['_id']['UST_ID']['$oid'];
//                 }

//                 return{
//                     row: i,
//                     Ref: val['Ref'],
//                     Value: val['_id']['Value'],
//                     MFPN: val['_id']['MFPN'],
//                     Distributor: val['_id']['Distributor'],
//                     Datasheet: val['_id']['Datasheet'],
//                     stock_count: val['_id']['stock_count'],
//                     count: val['Ref'].length,
//                     count_multiply: val['Ref'].length*1,

//                     price_item: price,
//                     price_row:  val['Ref'].length*price,
//                     link: uid,
//                     Footprint: val['_id']['Footprint'],
//                     note: val['_id']['note'],
//                     UST_ID: usttext,
//                     supplier: supplier
//                 }
//             });

//             return response; //return the tableData property of a response json object
//         },
// 	});
// 	table.setData('./?operation=get_components_grouped', {operation:"get_components_grouped"}, 'POST');


// Konec tabulky pro seznam polozek



function startUpload() {
    var fileInput = document.getElementById("ust_bom_file");
    //console.log(fileInput.files[0])

    var fd = new FormData();
	fd.append('remove_obsolete', Number($("#ust_bom_remove_obsolete").is(':checked')) );
	fd.append('remove_edited', 0 );
	fd.append('file', fileInput.files[0]);

    if (fileInput.files.length == 0) {
        alert("Please choose a file");
        return;
    }

    var xhr = new XMLHttpRequest();
	xhr.withCredentials = true;

    xhr.onload = function() {
        if (xhr.status == 200) {
			console.log("Úspěch - nahráno");
			load_components();
        } else {
            alert("Error! Upload failed");
        }
    };
    xhr.onerror = function() {
        alert("Error! Upload failed. Can not connect to server.");
    };

    xhr.open("POST", "/production/{{id}}/upload/bom/ust/", true);
    //xhr.setRequestHeader("Content-Type", "multipart/form-data");
    xhr.send(fd);
    // xhr.send(fileInput.files[0]+"&remove_obsolete="+$("#ust_bom_remove_obsolete").is(':checked'));

    load_components();
}




function load_components() {
	//var components = [];

	$.ajax({
        type: "POST",
        //contentType: "application/json; charset=utf-8",
        url: ".",
        data: {
        	operation: 'get_production'
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		console.log("zacatek");
            console.log(data);
            production = data;
            components = data['components'];
            placement = data['placement'];
            console.log(components);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
    console.log(components);

	// var selected = [];
	// $('#parts_table_body').empty();
	// for (i in components){
	// 	if (selected.indexOf(i) == -1){
	// 		var com = components[i];
	// 		selected.push(i);
	// 		var c_ref = [com['Ref']];
	// 		var c_package = com['Package']  || null;
	// 		var c_note = com['Note'] || null;
	// 		var c_value = com['Value']  || null;
	// 		var c_ustid = com['UST_ID'] || null;

	// 		// Tato cast provede 'grouping' polozek se stejnymi parametry
	// 		for (j in components){
	// 			if (selected.indexOf(j) == -1){
	// 				var com2 = components[j];
	// 				if (c_package == com2['Package'] && c_value == com2['Value'] && c_ustid == (com2['UST_ID'] || null) && c_note == (com2['Note'] || null)) {
	// 					c_ref.push(com2['Ref']);
	// 					selected.push(j);
	// 				}
	// 			}
	// 		}


	// 		var row = document.createElement("tr");
	// 		var x = row.insertCell(-1);
	// 		x.innerHTML = "<span class='position' clk_data='"+c_ref+"'>"+i+"</span>";


	// 		x = row.insertCell(-1);
	// 		for (j in c_ref){
	// 			if (j > 0){x.innerHTML += ', '}
	// 			x.innerHTML += "<span class='position' clk_data='" +c_ref[j]+ "'>"+c_ref[j]+"</span>";
	// 		}

	// 		x = row.insertCell(-1);
	// 		x.innerHTML = c_value;


	// 		//x = row.insertCell(-1);
	// 		//x.innerHTML = str(len(c_ref));

	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['MFNP'] || null;
	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['Distributor'] || null;
	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['Link'] || null;
	// 		x = row.insertCell(-1);
	// 		x.innerHTML = c_package;
	// 		x = row.insertCell(-1);
	// 		if (c_ustid){
	// 			x.innerHTML = '<a href = "/store/component/'+c_ustid+'/" target="_blank">'+c_ustid+'</a>';
	// 		}
	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['price_predicted'] || null;

	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['price_store'] || null;

	// 		x = row.insertCell(-1);
	// 		x.innerHTML = com['price_final'] || null;


	// 		x = row.insertCell(-1);
	// 		x.innerHTML = c_note || null;

	// 		$('#parts_table_body').append(row);
	// 	}
	// }

    console.log("OBECNA DATA:", production);

	$('#production_name').val(production['name']);
	$('#production_autor').val(production['author']);
	$('#production_created').val(Date(production['created']['$date']));
	$('#production_type').val(production['type']);
	$('#production_description').val(production['description']);

    // var draw = SVG('placement_img').size('300px', '300px');
    // for (i in placement){
    // 	var c = placement[i];
    // 	console.log(c);
    // 	draw.rect(10, 20).move(c.PosX*10, c.PosY*10).rotate(c.Rot).attr({ fill: '#f06', clk_data: c.Ref }).addClass('position');
    // }

	// $('.position').click(function(){
 //        edit_component(this.getAttribute('clk_data').split(','));
 //    });
// 	$('.position').hover(function(){
// 		var clk = this.getAttribute('clk_data');
// 		console.log(clk);
//         $('.position').css('background-color', 'initial');
//         $('.position').attr('fill', '#f06');
//         $('[clk_data="'+clk+'"]').css('background-color', 'red');
//         $('[clk_data="'+clk+'"]').attr('fill', '#00f');
//     });
 }


load_components();


// aktualizuje parametry, ktere jsou pouzite v tabulce s nastavenim
function update_parameters(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_parameters',
        	name: $('#production_name').val(),
        	description: $('#production_description').val(),
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function update_component_parameter(component, param, value){
	console.log("Uprava parametru:", $('#production_name').val(), component, param, value);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_component_parameters',
        	name: $('#production_name').val(),
        	component: component,
        	parameter: param,
        	value: value
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		//load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// funkce slouzi pro prenacteni vsech cen v modulu
function update_prices(){
	$.ajax({
		type: 'POST',
		url: '.',
		data:{
			operation: 'update_prices'
		},
		async: false,
		success: function(data, status, jQxhr){
            console.log('success', status, data);
		},
		error: function(jQxhr, status, error){
			console.log('error', status, error);
		}
	});
}



// Ref,Val,Package,PosX,PosY,Rot,Side
function update_placement(Ref,Val,Package,PosX,PosY,Rot,Side){
	console.log("update_placement", Ref,Val,Package,PosX,PosY,Rot,Side);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_placement',
        	Ref: Ref,
        	Val: Val,
        	Package: Package,
        	PosX: PosX,
        	PosY: PosY,
        	Rot: Rot,
        	Side:Side
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		comp = data;
            //console.log(comp);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// pri zmene souboru v #file_placement se vezme soubor, rozparseruje a po soucastkach se odesila na server
$('#file_placement').change(load_placement);
function load_placement(){

	var reader = new FileReader();
	reader.onload = function(progressEvent){
		console.log(this.result);

		var lines = this.result.split('\n');
		for(var i = 1; i < lines.length; i++){
		  console.log(lines[i]);
		  data = Papa.parse(lines[i], {
		  		delimiter: ',',
		  	}).data[0];
		  //console.log(data);
		  update_placement(data[0], data[1], data[2], data[3], data[4], data[5], data[6]);
		}

		load_components();
	};
	reader.readAsText( $('#file_placement')[0].files[0]);
}



</script>

{% end %}
