

{%for group in groups %}
<div class="card label_group" ondrop="drop(event)" ondragover="handleDragOver(event)" group_id="{{group['_id']}}">
  <div class="card-body">
    <div class="d-flex w-100 justify-content-between">
      <h3><input type="checkbox" class="label_groups_chbx" value="{{group['_id']}}"> {{group['name']}} {% if '_id' in group.get('labels', [{}])[0] %}<span class="badge rounded-pill bg-primary group-count">{{len(group.get('labels', []))}}</span>{%end%} </h3>
      <small class="text-muted"><div>{%if group['_id'] != None %} Autor Autor; {{group['_id'].generation_time}} {% end %} </div></small>
      {%if group['_id'] != None %}<span type="button" class="btn btn-danger" onClick="delete_group(this)"><i class="bi bi-trash"></i></span>{%end%}

    </div>
  </div>
  <div class="container" id="{{group['_id']}}list">
    <div class="list-group pb-3 label_list">
      {%for label in group.get('labels', []) %} {% if '_id' in label %}

        {% if label['type'] == 'packet' %}
        <div class="list-group-item list-group-item-action flex-column align-items-start" draggable="true" ondragstart="handleDragStart(event)" ondragend="handleDragEnd(event)"  style='cursor: move;' label_id="{{label['_id']}}" >
        <div class="d-flex w-100 justify-content-between">
          <div><h5> <i class="bi bi-box-seam openintranet_hover openintranet_hover_packet"></i> <a class="" href="/store/component/{{label['item'][0]['_id']}}/">{{label['item'][0]['name']}}</a> <small class="text-muted">{{label['id']}}</small></h5> 
            {#{{label}}#}

          </div>
          <small class="text-muted"><div>Autor {{label['author']}}; {{label['_id'].generation_time}}</div><div>Typ: {{label['type']}}</div></small>
        </div>
        <div class="d-flex w-100 justify-content-between">
            <div><i class="bi bi-card-heading openintranet_hover openintranet_hover_component" comp_id="{{label['item'][0]['_id']}}"></i> {{label['item'][0].get('description', "--bez popisu--")[:1000]}}</div>
          <div>
            <span type="button" class="btn btn-outline-danger" onClick="delete_label(this)"><i class="bi bi-trash"></i></span>
          </div>
        </div>

        </div>


        {% elif label['type'] == 'position' %}
        <div class="list-group-item list-group-item-action flex-column align-items-start" draggable="true" ondragstart="handleDragStart(event)" ondragend="handleDragEnd(event)"  style='cursor: move;' label_id="{{label['_id']}}" >

          <div class="d-flex w-100 justify-content-between">
          <div><h5> <i class="bi bi-geo"></i> pozice <small class="text-muted">{{label['id']}}</small></h5>

          </div>
          <small class="text-muted"><div>Autor {{label['author']}}; {{label['_id'].generation_time}}</div><div>Typ: {{label['type']}}</div></small>
        </div>
        <div class="d-flex w-100 justify-content-between">
          {#<div>{{label}}</div>#}
          <div>
            <span type="button" class="btn btn-outline-danger" onClick="delete_label(this)"><i class="bi bi-trash"></i></span>
          </div>
        </div>
        </div>



        {%else%}
        {{label}}<br>

        {%end%}
      {% end %}{%end%}
    </div>
  </div>

</div>
{% end %}


<script>

var source_element = null;
var dest_element = null;

function handleDragStart(e) {
    console.log("DragStart", e);
    source_element = e.target;
  }

  function handleDragEnd(e) {
    var label_group = $(dest_element).parentsUntil('', ".label_group").last();
    var group_id = $(label_group).attr('group_id');
    var label_id = $(source_element).attr('label_id');
    var dest_labels_list = $(label_group).find(".label_list").last();

    $('.group-count').remove();


    $.ajax('/labels/set_label_group', {
      method: 'POST',
      data: { 'label': label_id, 'group': group_id },
      success: function (data, status, xhr) {
        console.log(data);
        $(source_element).detach().appendTo(dest_labels_list);
      },
      error: function (jqXhr, textStatus, errorMessage) { }
    });

    console.log("PÅ™esouvam", label_id, "do", group_id);
  }

    function delete_label(e){
      console.log(e);
      var label_row = $(e).parents("[label_id]").last();
      var label_id = label_row.attr('label_id');
      console.log(label_id);

      $.ajax('/labels/remove_label', {
        method: 'POST',
        data: { 'label': label_id},
        success: function (data, status, xhr) {
          console.log(data);
          $(label_row).detach();
        },
        error: function (jqXhr, textStatus, errorMessage) { }
      });
    }


      function delete_group(e){
        var group_row = $(e).parents("[group_id]").last();
        group_id = group_row.attr("group_id");
        console.log(group_id);

        $.ajax('/labels/hide_group', {
          method: 'POST',
          data: { 'group': group_id},
          success: function (data, status, xhr) {
            console.log(data);
            $(group_row).detach();
          },
          error: function (jqXhr, textStatus, errorMessage) { }
        });
      }

  function drop(e) {
    console.log("drop", e);
    var data = e.dataTransfer;
    dest_element = e.target;
  }

  function handleDragOver(e) {
    if (e.preventDefault) {
      e.preventDefault();
    }

    return false;
  }

  function handleDragEnter(e) {
    console.log("event", e);
    console.log(this.classList);
    this.classList.add('over');
  }

  function handleDragLeave(e) {
    console.log("leave", e);
    console.log(this.classList);
    this.classList.remove('over');
  }

function handleDrop(e) {
  e.stopPropagation(); // stops the browser from redirecting.
  return false;
}

</script>
