F{% extends "base.hbs" %}
{% block title %} UST intranet | Produkce, uvod{% end %}
{% block body %}

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>

<link href="/static/select2/dist/css/select2.css" rel="stylesheet">
<script type="text/javascript" src="/static/select2/dist/js/select2.js"></script>

<link href="/static/tabulator/dist/css/bootstrap/tabulator_bootstrap4.css" rel="stylesheet">
<script type="text/javascript" src="/static/tabulator/dist/js/tabulator.js"></script>


<style type="text/css">
	.th-input{
		border: 1px solid lightgray;
		width: 100%;
		min-width: 5em;
		max-width: 10em;
	}

	.select2-style{
		height: initial;
		line-height: initial;
		padding: 0pt;
		border-radius: 0px;
	}

	table td {padding: 1pt;}
	.table-sm td {padding: 2pt; font-size: small;}
	table {table-layout: fixed;}


</style>

<div class="container-fluid">
	<a href="/production" class="btn btn-sm btn-success"> Zpět</a>
	{#Načíst bom:
	<input type="file" id="file_bom" name="file_bom" />
	Načíst Placement soubor:
	<input type="file" id="file_placement" name="file_bom" />#}
	UST BOM:
	<input type="file" name="bom" id="ust_bom_file"/>
	<input type="submit" value="upload" id="ust_bom_btn" onclick="startUpload()" />

	<div class="row">
		<div class="col-8">
			<div class="card">
				<div class="card-header"><h3>Production</h3></div>
				<div class="card-body">
					<div class="row form-group">
						<div class="col-2"> Název: </div>
						<input class="form-control col-10" type="text" id='production_name'><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Autor: </div>
						<input class="form-control col-10" type="text" id='production_autor' readonly><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Vytvořeno: </div>
						<input class="form-control col-10" type="text" id='production_created' readonly><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Popis: </div>
						<input class="form-control col-10" type="text" id='production_description'><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Type: </div>
						<input class="form-control col-10" type="text" id='production_type' readonly><br>
					</div>

					Dále zde bude: Tagy, priorita, celková cena
					<input class="form-control" type="button" id="production_info_send" value="Uložit parametry" onclick="update_parameters()">

					<a href="/production/{{id}}/print/" class="btn btn-sm btn-primary">Print</a>
					<input type="button" id="production_update_prices" value="Zaktualizovat skladove zasoby" class="btn btn-sm btn-primary" onclick="update_prices()">
					<input type="number" id="production_multiplication" value="1" class="btn btn-sm btn-primary" onchange="table.setData('./?operation=get_components_grouped', {operation:'get_components_grouped'}, 'POST');">
				</div>
			</div>
		</div>

		<div class="col-12">
			<div class="card">
				<div class="card-header"><h3>Části</h3></div>
				<div><div id="component-table" class="table-sm table-striped"></div></div>
				<input type="button" class="component-table-add-row btn btn-primary" value="Add row">
			</div>
		</div>
		<div class="col-12"><div class="card">
			<div class="form-group row">
				<input class="" type="text" name="">
				<input class="" type="button" name="" value="Odstranit součástku">
			</div></div>
		</div>
		<div class="col-12">
			<div class="card">
				<div class="card-header">
					<h3>Výroba</h3>
				</div>
				<div>
					<button style="btn btn-sm" onclick="new_manufacturing_row()">+</button>
				</div>
				<div><div id="manufacturing-table" class="table-sm table-striped"></div></div>
				<div class="card-body" >


				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">




    //
    // initUtils();
    // initRender();
    // initStorage();
    // initDefaults();
    // cleanGutters();
    // populateMetadata();
    // dbgdiv = document.getElementById("dbg");
    // bom = document.getElementById("bombody");
    // bomhead = document.getElementById("bomhead");
    // filter = "";
    // reflookup = "";
    // initDone = true;
    // console.log("changeBomLayout");
    // // Triggers render
    // changeBomLayout('left-right');
	// //$("#component-table").tabulator();


	//create autocomplete editor

var ust_id_autocomplete = function(cell, onRendered, success, cancel){
    //cell - the cell component for the editable cell
    //onRendered - function to call when the editor has been rendered
    //success - function to call to pass the succesfully updated value to Tabulator
    //cancel - function to call to abort the edit and return to a normal cell

    //create and style input

	var input = document.createElement("select");
    input.setAttribute("class", "th-input");
    input.setAttribute("id", "row_ustid");

    //create and style input
    input.style.padding = "3px";
    input.style.width = "100%";
    input.style.boxSizing = "border-box";

    onRendered(function(){
    	console.log('RENDER')
        var select_input = $(input);

        select_input.select2({
		  	//dropdownCssClass: "select2-style",
		  	width: '100%',
		    ajax: {
		    	delay: 250,
			    url: '/store/api/search/',
			    type: "POST",
			    dataType: 'json',
			    data: function (params) {
			      var query = {
			        q: params.term,
			        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
			        page: 0
			      }
			      return query;
			    },
			    processResults: function (data) {
			    	data.unshift(Object({name: 'Odebrat výběr', value: -1, _id: {'$oid': "null"}}))
			        return {
			            results: $.map(data, function (item, i) {
                            //console.log(item, i);
			                return {
			                    text: item['name']+" ("+item['_id']['$oid']+")",
			                    id: item['_id']['$oid']
			                }
			            })
			        };
			    }
		    },
            allowClear: true,
    	});

        select_input.select2("open");
    });

    function onChange(e = null){
        var select_data = $(input).val();
        if(select_data !== null && select_data != cell.getValue()){
            console.log("Hodnota pole se zmenila", select_data);
            success(select_data);
        }else{
            console.log("Hodnota pole je stejna")
            cancel();
        }
    }

    $(input).on("change", onChange);
    $(input).on("select2:close", onChange);

    console.log(input);
    return input;
};

	// tlacitko, ktere prida prazdny radek na konec tabulky
	$(".component-table-add-row").click(function(){
    	$("#component-table").tabulator("addRow", {});
	});


	var table_component_price = function(values, data, calcParams){
	    console.log(values);
	    console.log(data);
	    console.log(calcParams);

	    var calc = 0;
	    for(var i in data){
	    	var row = data[i];
	    	console.log(">>", row);
	    	calc = row['calc']*row['price_predicted']
	    }
    	return calc;
	}


	function editf(e, cell){
		console.log(cell.cell);
		cell.edit(true);
	}

	function supplier_url(cell, formatterParams){ //plain text value
		var value = cell.getValue();
		console.log("VALUE", value);
		var row = "";
		for(x in value){
			if(x>0){row+=' ';}
			if(value[x].full_url == undefined){
				row += "<a>"+ value[x].supplier + "</a>";
			}else{
				row += "<a href = '"+ value[x].full_url +"' target='_blank'>"+ value[x].supplier + "</a>";
			}
		}
    	return row;
	};


	function multiplication(cell, formatterParams){
		var value = cell.getValue();
    	return value*$("#production_multiplication").val();
	};

	var table = new Tabulator("#component-table",{
	    layout:"fitColumns",
	    columns:[
	        {title:"#", field:"row", sorter:"number", width:25, editor:"input", editable:false},
	        {title:"počet", field: "count", sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
	        {title:"Pro výrobu", field: "count_multiply", formatter: multiplication, sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
	        {title:"Sklad",
	        	columns:[
	        		{title: "Celkem", field:"stock_count", editable: false, width: 80, topCalc:"sum"},
	        	]
	    	},
            {title:"Cena",
	        	columns:[
	        		{title: "pol", field:"price_item", editable: false, width: 80},
    	        	{title: "cel", field:"price_row", editable: false, width: 80, topCalc:"sum"},
	        	]
	    	},
            {title:"Link", field:"link", formatter:"link", formatterParams: {labelField:"link", urlPrefix:"/store#", target:"_blank"}, width: 50},
	        {title:"Značka", field:"Ref", editor:"input", editable:true, cellDblClick:editf, sorter:"string"},
	        {title:"Položka", field:"Value", editor:"input", editable:true, cellDblClick:editf},
	        {title:"MFPN", field:"MFPN", editor:"input", editable:true, cellDblClick:editf},
	        //{title:"Distributor", field:"Distributor", editor:"input", editable:true, cellDblClick:editf},
	        {title:"Odkaz", field:"Datasheet", editor:"input", formatter:"link", editable:true, cellDblClick:editf},
	        {title:"Pouzdro", field:"Footprint", editor:"input", cellClick:function(e, cell){}, cellDblClick:editf},
	        {title:"UST id", field:"UST_ID", editor: ust_id_autocomplete},
	        //{title:"Cena",
	        //    columns:[
		//	        {title:"Sklad", field:"price_store", editable:false, topCalc:"avg", width: 95},
		//	        {title:"Použitá", field:"price", editor:"input", topCalc:"avg", editable:true, cellDblClick:editf, width: 95},
		//	        {title:"Cena", field:"price_group", topCalc: "sum", editable:false, width: 95},
		//		]
		//	},
	        {title:"Poznámka", field:"note", editor:"textarea", editable:true, cellDblClick:function(e, cell){ cell.edit(true);} },
	        {title:"Dodavatele", field:"supplier", editable:false, formatter: supplier_url},
	    ],
    	addRowPos:"bottom",
	    cellEdited:function(cell){
            if(cell._cell.value !== null){
    	    	console.log("EDITED");
            	//console.log(cell);
        		//console.log(cell._cell.row.cells[7].value);
        		update_component_parameter(cell._cell.row.cells[7].value, cell._cell.column.field, cell._cell.value);
            }
    	},
        ajaxResponse:function(url, params, response){
            console.log("AJAX RESPONSE");
            console.log(url);
            console.log(params);
            console.log(response);
            //url - the URL of the request
            //params - the parameters passed with the request
            //response - the JSON object returned in the body of the response.

            response = $.map(response, function( val, i ) {
              // Do something
              console.log(val, i);

              var usttext = undefined;
              var price = null;
 			  var supplier = [];


                if (val['stock'].length > 0){

                  console.log("PRED SUPPLIER");
                  supplier = val['stock'][0].supplier;

                  usttext = val['stock'][0]['name'];
                  console.log("StockName", val['stock'][0]['name']);

				  var history = val['stock'][0]['history'];

                    console.log("Historie:", history);
                    for(j in history){
                        if(history[j]['operation'] == 'buy' || history[j]['operation'] == 'inventory'){
                            console.log("Cena za nakup je",  history[j]['price']);
                            price = history[j]['price'];
                            break;
                        }
                      }
                  //}
                }

                var uid = val["_id"]['UST_ID'];

                if(typeof uid == 'object'){
                    uid = val['_id']['UST_ID']['$oid'];
                }

                return{
                    row: i,
                    Ref: val['Ref'],
                    Value: val['_id']['Value'],
                    MFPN: val['_id']['MFPN'],
                    Distributor: val['_id']['Distributor'],
                    Datasheet: val['_id']['Datasheet'],
                    stock_count: val['_id']['stock_count'],
                    count: val['Ref'].length,
                    count_multiply: val['Ref'].length*1,

                    price_item: price,
                    price_row:  val['Ref'].length*price,
                    link: uid,
                    Footprint: val['_id']['Footprint'],
                    note: val['_id']['note'],
                    UST_ID: usttext,
                    supplier: supplier
                }
            });

            return response; //return the tableData property of a response json object
        },
	});
	table.setData('./?operation=get_components_grouped', {operation:"get_components_grouped"}, 'POST');


// Konec tabulky pro seznam polozek

// Tabulka pro seznam vyrobenych soucastek
	var manufacturing_table = new Tabulator("#manufacturing-table",{
	    layout:"fitColumns",
	    columns:[
    		{
    			formatter:"rownum",
    			align:"center",
    			width:40
    		},{
	        	title:"SN",
	        	field:'sn',
	        	width:120
	        },{
	        	title:"Stav",
	        	field:"state",
	        	editor:"select",
	        	editorParams:{
	        				0:"0 - Plánováno",
	        				1:"1 - Před výrobou, Rezervováno",
	        				2:"2 - Výroba",
	        				3:"3 - Vyrobeno",
	        				4:"4 - Před testováním",
	        				5:"5 - Testování",
	        				6:"6 - Test OK",
	        				7:"7 - Test FAIL",
	        				8:"8 - Oprava",
	        				9:"9 - Zrušeno",
	        				10:"10- Dokončeno",
	        			}
	       	},{
	       		title:"Vytvořeno",
	       		field:"created_date",
	       		formatter:"datetime"
	       	},{
	       		title:"Dokončeno",
	       		field:"name",
	       		editor:"input"
	       	},{
	       		title:"Vyrobil",
	       		field:"author",
	       		editor:"input"
	       	},{
	       		title:"Testoval",
	       		field:"name",
	       		editor:"input"
	       	},{
	       		title:"Popis",
	       		field:"description",
	       		editor:"input"
	       	},

	    ],
    	addRowPos:"top",
	    cellEdited:function(cell){

    	}
	});
	manufacturing_table.setData('./?operation=get_manufacture_overview', {operation:"get_manufacture_overview"}, 'POST');

// Tato funkce vytvori novou polozku v seznamu vyrobenych/vyrabenych polozek
function new_manufacturing_row(){
	console.log("Vytvoreni noveho radku");
	var xhttp = new XMLHttpRequest();
	xhttp.open("POST", "./?operation=add_manufacture_row", false);
	// xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	xhttp.send();
	manufacturing_table.setData('./?operation=get_manufacture_overview', {operation:"get_manufacture_overview"}, 'POST');
}




function edit_component(id){
	console.log("CLICK");
	console.log(id);
	console.log(components);
	var selected_id = null;
	var selected = {}

    for (i in components){
    	var c = components[i];

    	//console.log(i, id, c);
    	if (c.Ref == id[0]){
    		selected_id = i;
    		console.log(i);
    		selected = components[i];
    		break;
    	}
    }

    console.log(selected)

	$('#row_znacka').val(id);
	$('#row_polozka').val(selected.Value);
	$('#row_pouzdro').val(selected.Package);
	$('#row_description').val(selected.Note);

	$('#row_price_predicted').val(selected.price);
	$('#row_price_stock').val(selected.price_store);
	//$('#row_price_final').val(selected.price_final);

	$('#row_nahrada').empty().trigger('change');
	$('#row_nahrada').append(new Option(selected['UST_ID'], selected['UST_ID'], true, true)).trigger('change');
}



function startUpload() {
    var fileInput = document.getElementById("ust_bom_file");

    if (fileInput.files.length == 0) {
        alert("Please choose a file");
        return;
    }

    var xhr = new XMLHttpRequest();

    xhr.onload = function() {
        if (xhr.status == 200) {
			load_components();
        } else {
            alert("Error! Upload failed");
        }
    };
    xhr.onerror = function() {
        alert("Error! Upload failed. Can not connect to server.");
    };

    xhr.open("POST", "/production/{{id}}/upload/bom/ust/", true);
    xhr.setRequestHeader("Content-Type", fileInput.files[0].type);
    xhr.send(fileInput.files[0]);

    load_components();
}





function row_update_values(){
	//tstamp, ref, name, value, package, ust_id, description, price_predicted, price_store, price_final
	update_component(null,
		$('#row_znacka').val(), 	// ref
		null,						// name
		$('#row_polozka').val(), 	// value
		$('#row_pouzdro').val(), 	// package
		$('#row_nahrada').val(), 	// ust_id
		$('#row_description').val(), // popis
		$('#row_price_predicted').val(), // price_predicted
		$('#row_price_stock').val(), // ust_id
		$('#row_price_final').val(), // price_final
		);
	load_components();
}



function load_components() {
	//var components = [];

	$.ajax({
        type: "POST",
        //contentType: "application/json; charset=utf-8",
        url: ".",
        data: {
        	operation: 'get_production'
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		console.log("zacatek");
            console.log(data);
            production = data;
            components = data['components'];
            placement = data['placement'];
            console.log(components);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
    console.log(components);

	var selected = [];
	$('#parts_table_body').empty();
	for (i in components){
		if (selected.indexOf(i) == -1){
			var com = components[i];
			selected.push(i);
			var c_ref = [com['Ref']];
			var c_package = com['Package']  || null;
			var c_note = com['Note'] || null;
			var c_value = com['Value']  || null;
			var c_ustid = com['UST_ID'] || null;

			// Tato cast provede 'grouping' polozek se stejnymi parametry
			for (j in components){
				if (selected.indexOf(j) == -1){
					var com2 = components[j];
					if (c_package == com2['Package'] && c_value == com2['Value'] && c_ustid == (com2['UST_ID'] || null) && c_note == (com2['Note'] || null)) {
						c_ref.push(com2['Ref']);
						selected.push(j);
					}
				}
			}


			var row = document.createElement("tr");
			var x = row.insertCell(-1);
			x.innerHTML = "<span class='position' clk_data='"+c_ref+"'>"+i+"</span>";


			x = row.insertCell(-1);
			for (j in c_ref){
				if (j > 0){x.innerHTML += ', '}
				x.innerHTML += "<span class='position' clk_data='" +c_ref[j]+ "'>"+c_ref[j]+"</span>";
			}

			x = row.insertCell(-1);
			x.innerHTML = c_value;


			//x = row.insertCell(-1);
			//x.innerHTML = str(len(c_ref));

			x = row.insertCell(-1);
			x.innerHTML = com['MFNP'] || null;
			x = row.insertCell(-1);
			x.innerHTML = com['Distributor'] || null;
			x = row.insertCell(-1);
			x.innerHTML = com['Link'] || null;
			x = row.insertCell(-1);
			x.innerHTML = c_package;
			x = row.insertCell(-1);
			if (c_ustid){
				x.innerHTML = '<a href = "/store#'+c_ustid+'" target="_blank">'+c_ustid+'</a>';
			}
			x = row.insertCell(-1);
			x.innerHTML = com['price_predicted'] || null;

			x = row.insertCell(-1);
			x.innerHTML = com['price_store'] || null;

			x = row.insertCell(-1);
			x.innerHTML = com['price_final'] || null;


			x = row.insertCell(-1);
			x.innerHTML = c_note || null;

			$('#parts_table_body').append(row);
		}
	}

    console.log("OBECNA DATA:", production);

	$('#production_name').val(production['name']);
	$('#production_autor').val(production['author']);
	$('#production_created').val(Date(production['created']['$date']));
	$('#production_type').val(production['type']);
	$('#production_description').val(production['description']);

    // var draw = SVG('placement_img').size('300px', '300px');
    // for (i in placement){
    // 	var c = placement[i];
    // 	console.log(c);
    // 	draw.rect(10, 20).move(c.PosX*10, c.PosY*10).rotate(c.Rot).attr({ fill: '#f06', clk_data: c.Ref }).addClass('position');
    // }

	$('.position').click(function(){
        edit_component(this.getAttribute('clk_data').split(','));
    });
	$('.position').hover(function(){
		var clk = this.getAttribute('clk_data');
		console.log(clk);
        $('.position').css('background-color', 'initial');
        $('.position').attr('fill', '#f06');
        $('[clk_data="'+clk+'"]').css('background-color', 'red');
        $('[clk_data="'+clk+'"]').attr('fill', '#00f');
    });
}


load_components();


// aktualizuje parametry, ktere jsou pouzite v tabulce s nastavenim
function update_parameters(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_parameters',
        	name: $('#production_name').val(),
        	description: $('#production_description').val(),
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function update_component_parameter(component, param, value){
	console.log("Uprava parametru:", $('#production_name').val(), component, param, value);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_component_parameters',
        	name: $('#production_name').val(),
        	component: component,
        	parameter: param,
        	value: value
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		//load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// funkce slouzi pro prenacteni vsech cen v modulu
function update_prices(){
	$.ajax({
		type: 'POST',
		url: '.',
		data:{
			operation: 'update_prices'
		},
		async: false,
		success: function(data, status, jQxhr){
            console.log('success', status, data);
		},
		error: function(jQxhr, status, error){
			console.log('error', status, error);
		}
	});
}



// Ref,Val,Package,PosX,PosY,Rot,Side
function update_placement(Ref,Val,Package,PosX,PosY,Rot,Side){
	console.log("update_placement", Ref,Val,Package,PosX,PosY,Rot,Side);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_placement',
        	Ref: Ref,
        	Val: Val,
        	Package: Package,
        	PosX: PosX,
        	PosY: PosY,
        	Rot: Rot,
        	Side:Side
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		comp = data;
            //console.log(comp);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}




// pri zmene souboru v #file_placement se vezme soubor, rozparseruje a po soucastkach se odesila na server
$('#file_placement').change(load_placement);
function load_placement(){

	var reader = new FileReader();
	reader.onload = function(progressEvent){
		console.log(this.result);

		var lines = this.result.split('\n');
		for(var i = 1; i < lines.length; i++){
		  console.log(lines[i]);
		  data = Papa.parse(lines[i], {
		  		delimiter: ',',
		  	}).data[0];
		  //console.log(data);
		  update_placement(data[0], data[1], data[2], data[3], data[4], data[5], data[6]);
		}

		load_components();
	};
	reader.readAsText( $('#file_placement')[0].files[0]);
}



</script>

{% end %}
