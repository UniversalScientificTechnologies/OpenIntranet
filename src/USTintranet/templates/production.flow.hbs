{% extends "base.hbs" %}
{% block title %} UST intranet | Produkce, uvod{% end %}
{% block body %}

<script type="text/javascript" src="/static/svg.min.js"></script>
<!-- <link href="/static/tabulator/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="/static/tabulator/dist/js/tabulator.min.js"></script> -->

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU=" crossorigin="anonymous"></script>

<!-- <link href="https://cdnjs.cloudflare.com/ajax/libs/tabulator/3.5.3/css/bootstrap/tabulator_bootstrap4.min.css" rel="stylesheet">
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/3.5.3/js/tabulator.min.js"></script>
 -->


<link href="/static/select2/dist/css/select2.css" rel="stylesheet">
<script type="text/javascript" src="/static/select2/dist/js/select2.js"></script>

<link href="/static/tabulator/dist/css/bootstrap/tabulator_bootstrap4.css" rel="stylesheet">
<script type="text/javascript" src="/static/tabulator/dist/js/tabulator.js"></script>



<script type="text/javascript">
	var id = '{{id}}';
	var components = [];
	var placement = [];
	var production = [];
</script>

<style type="text/css">
	.th-input{
		border: 1px solid lightgray;
		width: 100%;
		min-width: 5em;
		max-width: 10em;
	}

	.select2-style{
		height: initial;
		line-height: initial;
		padding: 0pt;
		border-radius: 0px;
	}

	table td {padding: 1pt;}
	.table-sm td {padding: 2pt; font-size: small;}
	table {table-layout: fixed;}


</style>

<div class="container-fluid">
	<a href="/production" class="btn btn-sm btn-success"> Zpět</a>
	{#Načíst bom:
	<input type="file" id="file_bom" name="file_bom" />
	Načíst Placement soubor:
	<input type="file" id="file_placement" name="file_bom" />#}
	UST BOM:
	<input type="file" name="bom" id="ust_bom_file"/>
	<input type="submit" value="upload" id="ust_bom_btn" onclick="startUpload()" />

	<div class="row">
		<div class="col-8">
			<div class="card">
				<div class="card-header"><h3>Production</h3></div>
				<div class="card-body">
					<div class="row form-group">
						<div class="col-2"> Název: </div>
						<input class="form-control col-10" type="text" id='production_name'><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Autor: </div>
						<input class="form-control col-10" type="text" id='production_autor' disabled><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Vytvořeno: </div>
						<input class="form-control col-10" type="text" id='production_created' disabled><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Popis: </div>
						<input class="form-control col-10" type="text" id='production_description'><br>
					</div>
					<div class="row form-group">
						<div class="col-2"> Type: </div>
						<input class="form-control col-10" type="text" id='production_type' disabled><br>
					</div>
					
					Dále zde bude: Tagy, priorita, celková cena
					<input class="form-control" type="button" id="production_info_send" value="Uložit parametry" onclick="update_parameters()">
					
					<a href="/production/{{id}}/print/" class="btn btn-sm btn-primary">Print</a>
					<input type="button" id="production_update_prices" value="Zaktualizovat ceny" class="btn btn-sm btn-primary" onclick="update_prices()">
				</div>
			</div>
		</div>

		<div class="col-12">
			<div class="card">
				<div class="alert alert-danger alert-dismissible fade show">Zde je potřeba ověřit správnost sčítání skladových zásob (jestli se do toho nezapočítáva inventura a tak... (toto číslo nesouvisí s dalšími počty jinde)</div>
				<div class="card-header"><h3>Části</h3></div>
				<div><div id="component-table" class="table-sm table-striped"></div></div>
				<input type="button" class="component-table-add-row btn btn-primary" value="Add row">
			</div>
		</div>
		<div class="col-12"><div class="card">
			<div class="form-group row">
				<input class="" type="text" name="">
				<input class="" type="button" name="" value="Odstranit součástku">
			</div></div>
		</div>
		<div class="col-4">
			<div class="card">
				<div class="card-header">
					<h3>Placement</h3>
				</div>
				<div class="card-body">
					<div id="placement_img"></div>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	//$("#component-table").tabulator();


	//create autocomplete editor
	var aa_ust_id_autocomplete = function(cell, onRendered, success, cancel){
		console.log('UST_ID own editor')
	    var input = $('<select class="th-input"  id="row_ustid"></select>');
	    onRendered( function(){	
		    input.select2({
			  	//dropdownCssClass: "select2-style",
			  	width: '100%',
			    ajax: {
			    	delay: 250,
				    url: '/store/api/search/',
				    type: "POST",
				    dataType: 'json',
				    data: function (params) {
				      var query = {
				        q: params.term,
				        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
				        page: 0
				      }
				      return query;
				    },
				    processResults: function (data) {
				    	console.log("Mam data...", data);
				    	data.unshift(Object({name: 'Nic', value: null}))
				        return {
				            results: $.map(data, function (item) {
				                return {
				                    text: item['name']+" ("+item['_id']+")",
				                    id: item['_id']
				                }
				            })
				        };
				    }
			    }
			});
		});

	    /*
	    //submit new value on blur
	    input.on("change blur", function(e){
	        if(input.val() != cell.getValue()){
	            success(input.val());
	        }else{
	            cancel();
	        }
	    });

	    //submit new value on enter
	    input.on("keydown", function(e){
	        if(e.keyCode == 13){
	            success(input.val());
	        }

	        if(e.keyCode == 27){
	            cancel();
	        }
	    });
		*/

	    return input;
	};




var ust_id_autocomplete = function(cell, onRendered, success, cancel){
    //cell - the cell component for the editable cell
    //onRendered - function to call when the editor has been rendered
    //success - function to call to pass the succesfully updated value to Tabulator
    //cancel - function to call to abort the edit and return to a normal cell

    //create and style input


	var input = document.createElement("select");
    input.setAttribute("class", "th-input");
    input.setAttribute("id", "row_ustid");

    //create and style input
    input.style.padding = "3px";
    input.style.width = "100%";
    input.style.boxSizing = "border-box";
    

    onRendered(function(){
    	console.log('RENDER')
    	var sel = $(input).select2({
			  	//dropdownCssClass: "select2-style",
			  	width: '100%',
			    ajax: {
			    	delay: 250,
				    url: '/store/api/search/',
				    type: "POST",
				    dataType: 'json',
				    data: function (params) {
				      var query = {
				        q: params.term,
				        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
				        page: 0
				      }
				      return query;
				    },
				    processResults: function (data) {
				    	console.log("Mam data...", data);
				    	data.unshift(Object({name: 'Nic', value: null}))
				        return {
				            results: $.map(data, function (item) {
				                return {
				                    text: item['name']+" ("+item['_id']+")",
				                    id: item['_id']
				                }
				            })
				        };
				    }
			    }
		});
    	$(input).select2("open");
        //input.focus();
        //input.style.height = "100%";
    });

    function onChange(e = null){
    	console.log("e", e);
    	console.log('change', $(input).val());
        if($(input).val() != cell.getValue() && cell.getValue != 'undefined'){
        	//var data = $(input).val();
	        success($(input).val());
        }else{
            //input.remove();
            cancel();

        }
    }

    $(input).on("change", onChange);
    $(input).on("blur", onChange);

    //function succes(){}

    console.log(input);
    return input;
};

	// tlacitko, ktere prida prazdny radek na konec tabulky
	$(".component-table-add-row").click(function(){
    	$("#component-table").tabulator("addRow", {});
	});


	var table_component_price = function(values, data, calcParams){
	    console.log(values);
	    console.log(data);
	    console.log(calcParams);

	    var calc = 0;
	    for(var i in data){
	    	var row = data[i];
	    	console.log(">>", row);
	    	calc = row['calc']*row['price_predicted']
	    }
    	return calc;
	}


	function editf(e, cell){
		//alert("BTN", e, cell);
		console.log("...........")
		//console.log(e);
		console.log(cell.cell);
		//cell.cell.edit(true);
		cell.edit(true);
	}

	var table = new Tabulator("#component-table",{
	    layout:"fitColumns",
	    columns:[
	        {title:"#", field:"id", sorter:"number", width:25, editor:"input", editable:false},
	        {title:"počet", field: "count", sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
	        {title:"Pro výrobu", field: "count", sorter:"number", width: 80, editor:"input", editable:false, topCalc:"sum"},
	        {title:"Sklad",
	        	columns:[
	        		{title: "Celkem", field:"stock", editable: false, width: 80},
	        	]
	    	},
	        {title:"Značka", field:"Ref", editor:"input", editable:true, cellDblClick:editf},
	        {title:"Položka", field:"Value", editor:"input", editable:true, cellDblClick:editf},
	        {title:"MFPN", field:"MFPN", editor:"input", editable:true, cellDblClick:editf},
	        {title:"Distributor", field:"Distributor", editor:"input", editable:true, cellDblClick:editf},
	        {title:"Odkaz", field:"Datasheet", editor:"input", formatter:"link", editable:true, cellDblClick:editf},
	        {title:"Pouzdro", field:"Footprint", editor:"input", cellClick:function(e, cell){}, cellDblClick:editf},
	        {title:"UST id", field:"UST_ID", editor: ust_id_autocomplete},
	        {title:"Cena",
	            columns:[
			        {title:"Sklad", field:"price_store", editable:false, topCalc:"avg", width: 95},
			        {title:"Použitá", field:"price", editor:"input", topCalc:"avg", editable:true, cellDblClick:editf, width: 95},
			        {title:"Cena", field:"price_group", topCalc: "sum", editable:false, width: 95},
				]
			},
	        {title:"Poznámka", field:"note", editor:"textarea", editable:true, cellDblClick:function(e, cell){ cell.edit(true);} },
	    ],
    	addRowPos:"bottom",
	    cellEdited:function(cell){
	    	console.log("EDITED");
        	console.log(cell);
    		console.log(cell.cell.row.cells[4].value);
    		update_component_parameter(cell.cell.row.cells[4].value, cell.cell.column.field, cell.cell.value);
    	},
	});
	table.setData('./?operation=get_components_grouped', {operation:"get_components_grouped"}, 'POST');
	
	//var ajaxConfig = {
	//    type:"POST", //set request type to Position
	//    //contentType: 'application/json; charset=utf-8', //set specific content type
	//};
	//table.setData(".", {operation:"get_components_grouped"}, ajaxConfig);
	
function edit_component(id){
	console.log("CLICK");
	console.log(id);
	console.log(components);
	var selected_id = null;
	var selected = {}

    for (i in components){
    	var c = components[i];
	
    	//console.log(i, id, c);
    	if (c.Ref == id[0]){
    		selected_id = i;
    		console.log(i);
    		selected = components[i];
    		break;
    	}
    }

    console.log(selected)

	$('#row_znacka').val(id);
	$('#row_polozka').val(selected.Value);
	$('#row_pouzdro').val(selected.Package);
	$('#row_description').val(selected.Note);

	$('#row_price_predicted').val(selected.price);
	$('#row_price_stock').val(selected.price_store);
	//$('#row_price_final').val(selected.price_final);

	$('#row_nahrada').empty().trigger('change');
	$('#row_nahrada').append(new Option(selected['UST_ID'], selected['UST_ID'], true, true)).trigger('change');
}



function startUpload() {
    var fileInput = document.getElementById("ust_bom_file");

    if (fileInput.files.length == 0) {
        alert("Please choose a file");
        return;
    }
    
    var xhr = new XMLHttpRequest();

    xhr.onload = function() {
        if (xhr.status == 200) {
			load_components();
        } else {
            alert("Error! Upload failed");
        }
    };
    xhr.onerror = function() {
        alert("Error! Upload failed. Can not connect to server.");
    };
    
    xhr.open("POST", "/production/{{id}}/upload/bom/ust/", true);
    xhr.setRequestHeader("Content-Type", fileInput.files[0].type);
    xhr.send(fileInput.files[0]);

    load_components();
}





function row_update_values(){
	//tstamp, ref, name, value, package, ust_id, description, price_predicted, price_store, price_final
	update_component(null,
		$('#row_znacka').val(), 	// ref
		null,						// name
		$('#row_polozka').val(), 	// value
		$('#row_pouzdro').val(), 	// package
		$('#row_nahrada').val(), 	// ust_id
		$('#row_description').val(), // popis
		$('#row_price_predicted').val(), // price_predicted
		$('#row_price_stock').val(), // ust_id
		$('#row_price_final').val(), // price_final
		);
	load_components();
}



function load_components() {
	//var components = [];

	$.ajax({
        type: "POST",
        //contentType: "application/json; charset=utf-8",
        url: ".",
        data: {
        	operation: 'get_production'
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		console.log("zacatek");
            console.log(data);
            production = data;
            components = data['components'];
            placement = data['placement'];
            console.log(components);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
    console.log(components);

	var selected = [];
	$('#parts_table_body').empty();
	for (i in components){
		if (selected.indexOf(i) == -1){
			var com = components[i];
			selected.push(i);
			var c_ref = [com['Ref']];
			var c_package = com['Package']  || null;
			var c_note = com['Note'] || null;
			var c_value = com['Value']  || null;
			var c_ustid = com['UST_ID'] || null;

			// Tato cast provede 'grouping' polozek se stejnymi parametry
			for (j in components){
				if (selected.indexOf(j) == -1){
					var com2 = components[j];
					if (c_package == com2['Package'] && c_value == com2['Value'] && c_ustid == (com2['UST_ID'] || null) && c_note == (com2['Note'] || null)) {
						c_ref.push(com2['Ref']);
						selected.push(j);
					}
				}
			}


			var row = document.createElement("tr");
			var x = row.insertCell(-1);
			x.innerHTML = "<span class='position' clk_data='"+c_ref+"'>"+i+"</span>";
			
			
			x = row.insertCell(-1);
			for (j in c_ref){
				if (j > 0){x.innerHTML += ', '}
				x.innerHTML += "<span class='position' clk_data='" +c_ref[j]+ "'>"+c_ref[j]+"</span>";
			}

			x = row.insertCell(-1);
			x.innerHTML = c_value;


			//x = row.insertCell(-1);
			//x.innerHTML = str(len(c_ref));

			x = row.insertCell(-1);
			x.innerHTML = com['MFNP'] || null;
			x = row.insertCell(-1);
			x.innerHTML = com['Distributor'] || null;
			x = row.insertCell(-1);
			x.innerHTML = com['Link'] || null;
			x = row.insertCell(-1);
			x.innerHTML = c_package;
			x = row.insertCell(-1);
			if (c_ustid){
				x.innerHTML = '<a href = "/store#'+c_ustid+'" target="_blank">'+c_ustid+'</a>';
			}
			x = row.insertCell(-1);
			x.innerHTML = com['price_predicted'] || null;

			x = row.insertCell(-1);
			x.innerHTML = com['price_store'] || null;

			x = row.insertCell(-1);
			x.innerHTML = com['price_final'] || null;


			x = row.insertCell(-1);
			x.innerHTML = c_note || null;

			$('#parts_table_body').append(row);
		}
	}

	$('#production_name').val(production['name']);
	$('#production_autor').val(production['author']);
	$('#production_created').val(production['created']);
	$('#production_type').val(production['type']);
	$('#production_description').val(production['description']);

    var draw = SVG('placement_img').size('300px', '300px');
    for (i in placement){
    	var c = placement[i];
    	console.log(c);
    	draw.rect(10, 20).move(c.PosX*10, c.PosY*10).rotate(c.Rot).attr({ fill: '#f06', clk_data: c.Ref }).addClass('position');
    }

	$('.position').click(function(){
        edit_component(this.getAttribute('clk_data').split(','));
    });
	$('.position').hover(function(){
		var clk = this.getAttribute('clk_data');
		console.log(clk);
        $('.position').css('background-color', 'initial');
        $('.position').attr('fill', '#f06');
        $('[clk_data="'+clk+'"]').css('background-color', 'red');
        $('[clk_data="'+clk+'"]').attr('fill', '#00f');
    });
}


load_components();


// aktualizuje parametry, ktere jsou pouzite v tabulce s nastavenim
function update_parameters(){
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_parameters',
        	name: $('#production_name').val(),
        	description: $('#production_description').val(),
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}

function update_component_parameter(component, param, value){
	console.log("Uprava parametru:", $('#production_name').val(), component, param, value);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_component_parameters',
        	name: $('#production_name').val(),
        	component: component,
        	parameter: param,
        	value: value
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		//load_components()
    	},
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}


/*
// Pouzivalo se pro nahravani BOMu parserovaneho v prohlizeci
function update_component(tstamp, ref, name, value, package, ust_id, description, price_predicted, price_store, price_final){
	
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_component',
        	tstamp: tstamp,
        	ref: ref,
        	name: name,
        	value: value,
        	package: package,
        	ust_id: ust_id,
        	description: description,
        	price_predicted: price_predicted,
        	price_store: price_store, 
        	price_final: price_final
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		comp = data;
            console.log(comp);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}
*/



// funkce slouzi pro prenacteni vsech cen v modulu
function update_prices(){
	$.ajax({
		type: 'POST',
		url: '.',
		data:{
			operation: 'update_prices'
		},
		async: false,
		success: function(data, status, jQxhr){
            console.log('success', status, data);
		},
		error: function(jQxhr, status, error){
			console.log('error', status, error);
		}
	});
}



// Ref,Val,Package,PosX,PosY,Rot,Side
function update_placement(Ref,Val,Package,PosX,PosY,Rot,Side){
	console.log("update_placement", Ref,Val,Package,PosX,PosY,Rot,Side);
	$.ajax({
        type: "POST",
        url: ".",
        data: {
        	operation: 'update_placement',
        	Ref: Ref,
        	Val: Val,
        	Package: Package,
        	PosX: PosX,
        	PosY: PosY,
        	Rot: Rot,
        	Side:Side
        },
   		async: false,
        success: function( data, textStatus, jQxhr ){
    		comp = data;
            //console.log(comp);
        },
        error: function( jqXhr, textStatus, errorThrown ){
            console.log( errorThrown );
            Lobibox.notify('error', {
                msg: 'CHYBA!!!!: ' + errorThrown,
                icon: false,
            });
        }
    });
}



/*
$('#file_bom').change(load_bom);
function load_bom(){

	var reader = new FileReader();
	reader.onload = function(progressEvent){
		console.log(this.result);

		var lines = this.result.split('\n');
		for(var i = 1; i < lines.length; i++){
		  console.log(lines[i]);
		  data = Papa.parse(lines[i], {
		  		delimiter: ';',
		  	}).data[0];
		  //console.log(data);
		  update_component(null, data[1], data[4], data[2], null, null, 0, 0, 0);
		}

		load_components();
	};
	reader.readAsText( $('#file_bom')[0].files[0]);
}*/



// pri zmene souboru v #file_placement se vezme soubor, rozparseruje a po soucastkach se odesila na server
$('#file_placement').change(load_placement);
function load_placement(){

	var reader = new FileReader();
	reader.onload = function(progressEvent){
		console.log(this.result);

		var lines = this.result.split('\n');
		for(var i = 1; i < lines.length; i++){
		  console.log(lines[i]);
		  data = Papa.parse(lines[i], {
		  		delimiter: ',',
		  	}).data[0];
		  //console.log(data);
		  update_placement(data[0], data[1], data[2], data[3], data[4], data[5], data[6]);
		}

		load_components();
	};
	reader.readAsText( $('#file_placement')[0].files[0]);
}


/*
//$('.position').click(edit_component([this.innerHTML]));
$('#row_nahrada').select2({
  	//dropdownCssClass: "select2-style",
  	width: '100%',
    ajax: {
    	delay: 250,
	    url: '/store/api/search/',
	    type: "POST",
	    dataType: 'json',
	    data: function (params) {
	      var query = {
	        q: params.term,
	        key: ['name', '_id', 'description', 'supplier.barcode', 'supplier.symbol'],
	        //key[2]: 'description',
	        //key[3]: 'supplier.symbol',
	        page: 0
	      }
	      // Query parameters will be ?search=[term]&type=public
	      return query;
	    },
	    processResults: function (data) {
	        return {
	            results: $.map(data, function (item) {
	                return {
	                    text: item['name']+" ("+item['_id']+")",
	                    id: item['_id']
	                }
	            })
	        };
	    }
    }
})*/


</script>

{% end %}